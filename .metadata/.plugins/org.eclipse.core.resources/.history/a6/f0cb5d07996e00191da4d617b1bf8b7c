package com.kiran.di;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Component;

@Component
public class Circle implements Shape{

	private Point center;
	@Autowired
	private MessageSource messageSource;
	
	

	public MessageSource getMessageSource() {
		return messageSource;
	}

	public void setMessageSource(MessageSource messageSource) {
		this.messageSource = messageSource;
	}

	public Point getCenter() {
		return center;
	}

//	@Autowired
	//@Qualifier(value="circleRelated")
	@Resource(name="pointC")
	public void setCenter(Point center) {
		this.center = center;
	}


	@PostConstruct
	public void initCircle() {
		System.out.println("Initialize Circle");
	}
	
	@PreDestroy
	public void destroyCircle() {
		System.out.println("Destroying Circle");
	}
	public void draw() {
		System.out.println("Drawing Circle");
		System.out.println("Circle point is:("+center.getX()+", "+ center.getY()+")");
		System.out.println(this.messageSource.getMessage("text", null, "Default message", null));
	
	}
}
