package com.kiran.di;

import java.util.List;
import java.util.function.Consumer;

import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;

public class Triangle implements ApplicationContextAware,Shape{
	
	List<Point> points;
	
	
	public List<Point> getPoints() {
		return points;
	}


	public void setPoints(List<Point> points) {
		this.points = points;
	}

	public void draw() {
		points.forEach(new Consumer<Point>(){
					
					@Override
					public void accept(Point point) {
						System.out.println("PointA"+"("+point.getX()+","+point.getY()+")");
					}									
		});
	}


	@Override
	public void setApplicationContext(ApplicationContext arg0) throws BeansException {
		// TODO Auto-generated method stub
		
	}

	
	/*public void draw() {
		System.out.println("PointA"+"("+getPointA().getX()+","+getPointA().getY()+")");
		System.out.println("PointB"+"("+getPointB().getX()+","+getPointB().getY()+")");
		System.out.println("PointC"+"("+getPointC().getX()+","+getPointC().getY()+")");
		
	}*/
}
